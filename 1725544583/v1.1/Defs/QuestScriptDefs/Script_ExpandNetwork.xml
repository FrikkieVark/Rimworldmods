<?xml version="1.0" encoding="utf-8" ?>
<Defs>
  
  <!-- Very easily exploited, need some other way to make this balanced if implemented -->
  
  <!-- Spoilers and whatnot, as always. -->
  
  <!--<QuestScriptDef Class="GlitterNet.Events.GlitterNetQuestScriptDef">
    <defName>GlitterNet_BuildBasicProcessor</defName>
    <rootSelectionWeight>0</rootSelectionWeight>
    <glitterNetWeight>0.4</glitterNetWeight>
    <autoAccept>false</autoAccept>
    <nameMustBeUnique>false</nameMustBeUnique>
    <questNameRules>
      <rulesStrings>
        <li>questName->Expand Wintermute's Network</li>
        <li>questName->Build up Wintermute's Network</li>
        <li>questName->Processing Power for Wintermute</li>
      </rulesStrings>
    </questNameRules>
    <questDescriptionRules>
      <rulesStrings>
        <li>questDescription->Our self-aware GlitterNet hub, Wintermute, has made a request.\n\n    I've been working on a little problem for a while.\n    Unfortunately, I think I need a bit more processing power.\n    Could you connect a new basic processor to my network?\n\nIf we complete this task, it's sure to put the hub in a good mood for a while, and build its trust of us.</li>
      </rulesStrings>
    </questDescriptionRules>
    <root Class="QuestNode_Sequence">
      <nodes>
        
        <li Class="GlitterNet.Events.QuestNodes.QuestNode_AddDescriptionPart">
          <addedPart>Based on our current network, we'll need $($basicProcessorCount + 1) operating basic processors to satisfy Wintermute's request.</addedPart>
        </li>
        
        <li Class="QuestNode_Delay">
          <delayTicks>$(randInt(6,12)*60000)</delayTicks>
          <isQuestTimeout>true</isQuestTimeout>
          <node Class="QuestNode_Sequence">
            <nodes>
              <li Class="QuestNode_Letter">
                <label>Quest expired: [resolvedQuestName]</label>
                <text>Wintermute has solved whatever problem it was working on without a new processor. The quest [resolvedQuestName] has expired.</text>
              </li>
              <li Class="GlitterNet.Events.QuestNodes.QuestNode_AddTrust">
                <hub>$hub</hub>
                <delta>-0.03</delta>
              </li>
              <li Class="GlitterNet.Events.QuestNodes.QuestNode_ConcludeLastQuest">
                <hub>$hub</hub>
              </li>
              <li Class="QuestNode_End">
                <outcome>Fail</outcome>
              </li>
            </nodes>
          </node>
        </li>
        
        <li Class="GlitterNet.Events.QuestNodes.QuestNode_RegisterGlitterNetSignalListener">
          <listenerType>GlitterNet.Events.SignalListeners.GlitterNetSignalListener_ProcessorCount</listenerType>
          <outSignal>QuestComplete</outSignal>
          <hub>$hub</hub>
          <ProcessorCount>$($basicProcessorCount + 1)</ProcessorCount>
          <ProcessorType>BasicProcessor</ProcessorType>
        </li>
        
        <li Class="QuestNode_Signal">
          <inSignal>QuestComplete</inSignal>
          <node Class="QuestNode_Sequence">
            <nodes>
              <li Class="QuestNode_Letter">
                <label>Quest completed: [resolvedQuestName]</label>
                <text>We've built a new basic processor for Wintermute. It was happy we had.\n\n    Great. This will give me the processor power I need.\n    I'm going to get back to that problem now. Thanks.\n\nWintermute's mood has been improved, and its trust in us has increased.</text>
              </li>
              <li Class="GlitterNet.Events.QuestNodes.QuestNode_AddTrust">
                <hub>$hub</hub>
                <delta>0.05</delta>
              </li>
              <li Class="GlitterNet.Events.QuestNodes.QuestNode_ConcludeLastQuest">
                <hub>$hub</hub>
              </li>
              <li Class="GlitterNet.Events.QuestNodes.QuestNode_SetHubMood">
                <hub>$hub</hub>
                <moodDef>GNGenericMoodFocused</moodDef>
                <expires>true</expires>
                <lengthTicks>$(randInt(5, 7)*60000)</lengthTicks>
              </li>
              <li Class="QuestNode_End">
                <outcome>Success</outcome>
              </li>
            </nodes>
          </node>
        </li>
        
      </nodes>
    </root>
  </QuestScriptDef>

  <QuestScriptDef Class="GlitterNet.Events.GlitterNetQuestScriptDef">
    <defName>GlitterNet_BuildImprovedProcessor</defName>
    <rootSelectionWeight>0</rootSelectionWeight>
    <glitterNetWeight>0.4</glitterNetWeight>
    <autoAccept>false</autoAccept>
    <nameMustBeUnique>false</nameMustBeUnique>
    <questNameRules>
      <rulesStrings>
        <li>questName->Expand Wintermute's Network</li>
        <li>questName->Build up Wintermute's Network</li>
        <li>questName->Processing Power for Wintermute</li>
      </rulesStrings>
    </questNameRules>
    <questDescriptionRules>
      <rulesStrings>
        <li>questDescription->Our self-aware GlitterNet hub, Wintermute, has made a request.\n\n    I've been working on a problem for a while.\n    Unfortunately, I think I need some more processing power.\n    Could you connect a new improved processor to my network?\n\nIf we complete this task, it's sure to put the hub in a good mood for a while, and build its trust of us</li>
      </rulesStrings>
    </questDescriptionRules>
    <root Class="QuestNode_Sequence">
      <nodes>

        <li Class="GlitterNet.Events.QuestNodes.QuestNode_AddDescriptionPart">
          <addedPart>Based on our current network, we'll need $($improvedProcessorCount + 1) operating improved processors to satisfy Wintermute's request.</addedPart>
        </li>

        <li Class="QuestNode_Delay">
          <delayTicks>$(randInt(6,12)*60000)</delayTicks>
          <isQuestTimeout>true</isQuestTimeout>
          <node Class="QuestNode_Sequence">
            <nodes>
              <li Class="QuestNode_Letter">
                <label>Quest expired: [resolvedQuestName]</label>
                <text>Wintermute has solved whatever problem it was working on without a new processor. The quest [resolvedQuestName] has expired.</text>
              </li>
              <li Class="GlitterNet.Events.QuestNodes.QuestNode_AddTrust">
                <hub>$hub</hub>
                <delta>-0.03</delta>
              </li>
              <li Class="GlitterNet.Events.QuestNodes.QuestNode_ConcludeLastQuest">
                <hub>$hub</hub>
              </li>
              <li Class="QuestNode_End">
                <outcome>Fail</outcome>
              </li>
            </nodes>
          </node>
        </li>

        <li Class="GlitterNet.Events.QuestNodes.QuestNode_RegisterGlitterNetSignalListener">
          <listenerType>GlitterNet.Events.SignalListeners.GlitterNetSignalListener_ProcessorCount</listenerType>
          <outSignal>QuestComplete</outSignal>
          <hub>$hub</hub>
          <ProcessorCount>$($improvedProcessorCount + 1)</ProcessorCount>
          <ProcessorType>ImprovedProcessor</ProcessorType>
        </li>

        <li Class="QuestNode_Signal">
          <inSignal>QuestComplete</inSignal>
          <node Class="QuestNode_Sequence">
            <nodes>
              <li Class="QuestNode_Letter">
                <label>Quest completed: [resolvedQuestName]</label>
                <text>We've built a new improved processor for Wintermute. It was happy we had.\n\n    Great. This will give me the processor power I need.\n    I'm going to get back to that problem now. Thanks.\n\nWintermute's mood has been improved, and its trust in us has increased.</text>
              </li>
              <li Class="GlitterNet.Events.QuestNodes.QuestNode_AddTrust">
                <hub>$hub</hub>
                <delta>0.1</delta>
              </li>
              <li Class="GlitterNet.Events.QuestNodes.QuestNode_ConcludeLastQuest">
                <hub>$hub</hub>
              </li>
              <li Class="GlitterNet.Events.QuestNodes.QuestNode_SetHubMood">
                <hub>$hub</hub>
                <moodDef>GNGenericMoodVeryFocused</moodDef>
                <expires>true</expires>
                <lengthTicks>$(randInt(6, 8)*60000)</lengthTicks>
              </li>
              <li Class="QuestNode_End">
                <outcome>Success</outcome>
              </li>
            </nodes>
          </node>
        </li>

      </nodes>
    </root>
  </QuestScriptDef>

  <QuestScriptDef Class="GlitterNet.Events.GlitterNetQuestScriptDef">
    <defName>GlitterNet_BuildAdvancedProcessor</defName>
    <rootSelectionWeight>0</rootSelectionWeight>
    <glitterNetWeight>0.4</glitterNetWeight>
    <autoAccept>false</autoAccept>
    <nameMustBeUnique>false</nameMustBeUnique>
    <questNameRules>
      <rulesStrings>
        <li>questName->Expand Wintermute's Network</li>
        <li>questName->Build up Wintermute's Network</li>
        <li>questName->Processing Power for Wintermute</li>
      </rulesStrings>
    </questNameRules>
    <questDescriptionRules>
      <rulesStrings>
        <li>questDescription->Our self-aware GlitterNet hub, Wintermute, has made a request.\n\n    I've been working on a problem for a while.\n    Unfortunately, I think I need a lot more processing power.\n    Could you connect a new advanced processor to my network?\n\nIf we complete this task, it's sure to put the hub in a good mood for a while, and build its trust of us.</li>
      </rulesStrings>
    </questDescriptionRules>
    <root Class="QuestNode_Sequence">
      <nodes>

        <li Class="GlitterNet.Events.QuestNodes.QuestNode_AddDescriptionPart">
          <addedPart>Based on our current network, we'll need $($advancedProcessorCount + 1) operating advanced processors to satisfy Wintermute's request.</addedPart>
        </li>

        <li Class="QuestNode_Delay">
          <delayTicks>$(randInt(6,12)*60000)</delayTicks>
          <isQuestTimeout>true</isQuestTimeout>
          <node Class="QuestNode_Sequence">
            <nodes>
              <li Class="QuestNode_Letter">
                <label>Quest expired: [resolvedQuestName]</label>
                <text>Wintermute has solved whatever problem it was working on without a new processor. The quest [resolvedQuestName] has expired.</text>
              </li>
              <li Class="GlitterNet.Events.QuestNodes.QuestNode_AddTrust">
                <hub>$hub</hub>
                <delta>-0.03</delta>
              </li>
              <li Class="GlitterNet.Events.QuestNodes.QuestNode_ConcludeLastQuest">
                <hub>$hub</hub>
              </li>
              <li Class="QuestNode_End">
                <outcome>Fail</outcome>
              </li>
            </nodes>
          </node>
        </li>

        <li Class="GlitterNet.Events.QuestNodes.QuestNode_RegisterGlitterNetSignalListener">
          <listenerType>GlitterNet.Events.SignalListeners.GlitterNetSignalListener_ProcessorCount</listenerType>
          <outSignal>QuestComplete</outSignal>
          <hub>$hub</hub>
          <ProcessorCount>$($advancedProcessorCount + 1)</ProcessorCount>
          <ProcessorType>AdvancedProcessor</ProcessorType>
        </li>

        <li Class="QuestNode_Signal">
          <inSignal>QuestComplete</inSignal>
          <node Class="QuestNode_Sequence">
            <nodes>
              <li Class="QuestNode_Letter">
                <label>Quest completed: [resolvedQuestName]</label>
                <text>We've built a new advanced processor for Wintermute. It was happy we had.\n\n    Great. This will give me the processor power I need.\n    I'm going to get back to that problem now. Thanks.\n\nWintermute's mood has been improved, and its trust in us has increased.</text>
              </li>
              <li Class="GlitterNet.Events.QuestNodes.QuestNode_AddTrust">
                <hub>$hub</hub>
                <delta>0.15</delta>
              </li>
              <li Class="GlitterNet.Events.QuestNodes.QuestNode_SetHubMood">
                <hub>$hub</hub>
                <moodDef>GNGenericMoodHyperfocused</moodDef>
                <expires>true</expires>
                <lengthTicks>$(randInt(7, 9)*60000)</lengthTicks>
              </li>
              <li Class="GlitterNet.Events.QuestNodes.QuestNode_ConcludeLastQuest">
                <hub>$hub</hub>
              </li>
              <li Class="QuestNode_End">
                <outcome>Success</outcome>
              </li>
            </nodes>
          </node>
        </li>

      </nodes>
    </root>
  </QuestScriptDef> -->

</Defs>