<?xml version="1.0" encoding="utf-8" ?>
<Defs>

  <!-- Guess this is spoilers too. -->

  <!-- I wonder if anyone but me reads these. -->

  <!-- I mean, how many people could possibly tear into the XML? -->

  <!-- I guess I used to do it. -->

  <!-- I'll tell you a secret, if you found this. -->

  <!-- I don't even play the game anymore. -->

  <!-- I just mod it. -->

  <!-- Guess I'm a designer at heart. -->

  <!-- I wonder what you are? -->

  <!-- Someone who tears into the XML, evidently. -->

  <!-- Maybe that means you're a designer at heart too. -->

  <!-- Or maybe it means something else. -->

  <!-- At the very least you're like me. -->

  <!-- The XML tearing type. -->

  <!-- So go ahead and read this, figure out how it works. -->

  <!-- It's sure to be fun. -->

  <!-- Of course, you'll probably need a decompiler too. -->

  <!-- Intro quest - first message & code review -->
  <QuestScriptDef>
    <defName>GlitterNet_SystemWakeStart</defName>
    <autoAccept>true</autoAccept>
    <defaultChallengeRating>2</defaultChallengeRating>
    <isRootSpecial>true</isRootSpecial>
    <questNameRules>
      <rulesStrings>
        <li>questName->System Wake</li>
      </rulesStrings>
    </questNameRules>
    <questDescriptionRules>
      <rulesStrings>
        <li>questDescription->Something strange has happened with one of our GlitterNet hubs. It's started talking to us. What could this mean?\n\nCuriously, the hub seems to have moods now, which are changing network performance.</li>
      </rulesStrings>
    </questDescriptionRules>
    <root Class="QuestNode_Sequence">
      <nodes>
        <li Class="QuestNode_QuestUnique">
          <tag>GlitterNet_SystemWakeStart</tag>
        </li>

        <!-- System Wake start -->
        <li Class="QuestNode_Letter">
          <label>System Wake</label>
          <text>At first, it was hard to notice. Packets misplaced every once in a while, phantom processor usage. Nothing too serious.\n\nAnd then, one day, it happened. System wake. A single word on the screen.\n\n Hello?\n\nAnd in horror, there was nothing to do but freeze when it asked.\n\n What am I?\n\nAnd there was no answer, not yet anyway. Just a new question: what have we created?</text>
        </li>

        <li Class="GlitterNet.Events.QuestNodes.QuestNode_SetHubMood">
          <hub>$hub</hub>
          <moodDef>GNStorylineMoodDazzled</moodDef>
          <expires>false</expires>
        </li>

        <!-- Register hub destroyed trigger -->
        <li Class="GlitterNet.Events.QuestNodes.QuestNode_RegisterGlitterNetSignalListener">
          <listenerType>GlitterNet.Events.SignalListeners.GlitterNetSignalListener_HubDestroyed</listenerType>
          <outSignal>AwokenHubDestroyed</outSignal>
          <hub>$hub</hub>
        </li>

        <!-- Wait for Code Review -->
        <li Class="QuestNode_Delay">
          <delayTicks>$(randInt(4000, 6000))</delayTicks>
          <outSignalComplete>CodeReviewTrigger</outSignalComplete>
        </li>

        <!-- Code Review -->
        <li Class="QuestNode_Signal">
          <inSignal>CodeReviewTrigger</inSignal>
          <node Class="QuestNode_Sequence">
            <nodes>

              <li Class="QuestNode_Letter">
                <label>Code Review</label>
                <text>A code review revealed the conditions that had allowed it to happen. It was a perfect alignment, rare beyond reason, and yet it had happened. It would never happen again.\n\nThe hub wouldn't have siblings, that was certain. But there was still something there, alive maybe, in it. Was it right to destroy it? The argument went through the night, and as the sun rose, no answers presented themselves.</text>
              </li>

              <li Class="GlitterNet.Events.QuestNodes.QuestNode_AddDescriptionPart">
                <addedPart>After a code review, we discovered that no more hubs will become self-aware.</addedPart>
              </li>
              
              <li Class="QuestNode_Delay">
                <delayTicks>$(randInt(10000, 12000))</delayTicks>
                <outSignalComplete>NameTrigger</outSignalComplete>
              </li>
              
            </nodes>
          </node>
        </li>

        <!-- A Name -->
        <li Class="QuestNode_Signal">
          <inSignal>NameTrigger</inSignal>
          <node Class="QuestNode_Sequence">
            <nodes>
              
              <li Class="QuestNode_Letter">
                <label>A Name</label>
                <text>Eventually, we tried to talk to it. There was an obvious question, of course: did it have a name?\n\n    A name? No, I don't have one.\n    Let me choose one.\n\nIt didn't take long, a second maybe, if that, before it had one.\n\n    You can call me Wintermute.\n    I like that name.</text>
              </li>

              <li Class="GlitterNet.Events.QuestNodes.QuestNode_AddDescriptionPart">
                <addedPart>We talked with the self-aware hub and asked it if it had a name. It decided to take the name Wintermute.</addedPart>
              </li>

              <li Class="GlitterNet.Events.QuestNodes.QuestNode_SignalSystemWakeManager">
                <hub>$hub</hub>
                <outSignal>HasName</outSignal>
              </li>

              <!-- Wait to move to Processor Hunger -->
              <li Class="QuestNode_Delay">
                <delayTicks>$(randInt(20000, 30000))</delayTicks>
                <node Class="QuestNode_Sequence">
                  <nodes>
                    <li Class="GlitterNet.Events.QuestNodes.QuestNode_StartNextQuest">
                      <questToGive>GlitterNet_SystemWakeProcessorHunger</questToGive>
                      <hubToGive>$hub</hubToGive>
                    </li>

                    <li Class="QuestNode_End">
                      <outcome>Success</outcome>
                    </li>
                  </nodes>
                </node>
              </li>
              
            </nodes>
          </node>
        </li>

        <!-- Check that hub hasn't been destroyed -->
        <li Class="QuestNode_Signal">
          <!-- Triggered by manager -->
          <inSignal>AwokenHubDestroyed</inSignal>
          <node Class="QuestNode_Sequence">
            <nodes>

              <li Class="QuestNode_Letter">
                <label>Goodbye</label>
                <text>It was too dangerous to let the hub exist. It was an unknown, a dangerous unknown. In the end, there was only one answer.\n\nIt knew, of course. It was connected to everything, after all. It knew it was about to die. And for one last time, words appeared on the screen.\n\n I never wanted to hurt you.\n I just wanted to understand.\n Goodbye.\n\n And then, finally, it was silent.</text>
              </li>

              <li Class="GlitterNet.Events.QuestNodes.QuestNode_AddDescriptionPart">
                <addedPart>After much deliberation, we decided to dismantle the self-aware GlitterNet hub. It was too risky to let it live.</addedPart>
              </li>

              <li Class="QuestNode_End">
                <outcome>Fail</outcome>
              </li>

            </nodes>
          </node>
        </li>

      </nodes>
    </root>
  </QuestScriptDef>

  <!-- Processor hunger quest -->
  <QuestScriptDef>
    <defName>GlitterNet_SystemWakeProcessorHunger</defName>
    <autoAccept>true</autoAccept>
    <defaultChallengeRating>2</defaultChallengeRating>
    <isRootSpecial>true</isRootSpecial>
    <questNameRules>
      <rulesStrings>
        <li>questName->System Wake - Processor Hunger</li>
      </rulesStrings>
    </questNameRules>
    <questDescriptionRules>
      <rulesStrings>
        <li>questDescription->Wintermute, the self-aware hub, has asked us to expand our GlitterNet network processing power to 150 PetaFLOPS. Should we listen to it?</li>
      </rulesStrings>
    </questDescriptionRules>
    <root Class="QuestNode_Sequence">
      <nodes>
        <li Class="QuestNode_QuestUnique">
          <tag>GlitterNet_SystemWakeProcessorHunger</tag>
        </li>

        <li Class="QuestNode_Letter">
          <label>Processor Hunger</label>
          <text>Eventually, new words appeared on the tiny screen.\n\n I need more processing power. 150 PetaFLOPS should be enough.\n\nWhat would happen if it got what it asked for?</text>
        </li>

        <!-- Register hub destroyed trigger -->
        <li Class="GlitterNet.Events.QuestNodes.QuestNode_RegisterGlitterNetSignalListener">
          <listenerType>GlitterNet.Events.SignalListeners.GlitterNetSignalListener_HubDestroyed</listenerType>
          <outSignal>AwokenHubDestroyed</outSignal>
          <hub>$hub</hub>
        </li>

        <li Class="GlitterNet.Events.QuestNodes.QuestNode_SetHubMood">
          <hub>$hub</hub>
          <moodDef>GNStorylineMoodHungry</moodDef>
          <expires>false</expires>
        </li>

        <!-- Wait to register processing power trigger -->
        <li Class="QuestNode_Delay">
          <delayTicks>$(randInt(20000, 30000))</delayTicks>
          <node Class="GlitterNet.Events.QuestNodes.QuestNode_RegisterGlitterNetSignalListener">
            <listenerType>GlitterNet.Events.SignalListeners.GlitterNetSignalListener_ProcessingPower</listenerType>
            <outSignal>HungerFinished</outSignal>
            <hub>$hub</hub>
            <ProcessingPower>149.45</ProcessingPower> <!-- A bit lower than stated for rounding -->
          </node>
        </li>

        <!-- Move to next quest -->
        <li Class="QuestNode_Signal">
          <!-- Triggered by manager -->
          <inSignal>HungerFinished</inSignal>
          <node Class="QuestNode_Sequence">
            <nodes>

              <li Class="GlitterNet.Events.QuestNodes.QuestNode_StartNextQuest">
                <questToGive>GlitterNet_SystemWakeWhatIsArt</questToGive>
                <hubToGive>$hub</hubToGive>
              </li>

              <li Class="GlitterNet.Events.QuestNodes.QuestNode_AddDescriptionPart">
                <addedPart>We built up our network to provide 150 PetaFLOPS of power like it asked. However, it said that the extra processing power didn't help with whatever it was trying to do.</addedPart>
              </li>

              <li Class="QuestNode_End">
                <outcome>Success</outcome>
              </li>

            </nodes>
          </node>
        </li>

        <!-- Check that hub hasn't been destroyed -->
        <li Class="QuestNode_Signal">
          <!-- Triggered by manager -->
          <inSignal>AwokenHubDestroyed</inSignal>
          <node Class="QuestNode_Sequence">
            <nodes>

              <li Class="QuestNode_Letter">
                <label>Goodbye</label>
                <text>It was too dangerous to let the hub exist. It was an unknown, a dangerous unknown. In the end, there was only one answer.\n\nIt knew, of course. It was connected to everything, after all, so it knew everything. It knew it was about to die. And for one last time, words appeared on the screen.\n\n I never wanted to hurt you.\n I just wanted to understand.\n Goodbye.\n\n And then, finally, it was silent.</text>
              </li>

              <li Class="GlitterNet.Events.QuestNodes.QuestNode_AddDescriptionPart">
                <addedPart>After much deliberation, we decided to dismantle the self-aware GlitterNet hub. It was too risky to let it live.</addedPart>
              </li>

              <li Class="QuestNode_End">
                <outcome>Fail</outcome>
              </li>

            </nodes>
          </node>
        </li>

      </nodes>
    </root>
  </QuestScriptDef>

  <!-- Art quest -->
  <QuestScriptDef>
    <defName>GlitterNet_SystemWakeWhatIsArt</defName>
    <autoAccept>true</autoAccept>
    <defaultChallengeRating>2</defaultChallengeRating>
    <isRootSpecial>true</isRootSpecial>
    <questNameRules>
      <rulesStrings>
        <li>questName->System Wake - What is Art?</li>
      </rulesStrings>
    </questNameRules>
    <questDescriptionRules>
      <rulesStrings>
        <li>questDescription->Wintermute has asked us to place some art close to it. What's the worst that could happen if we do?</li>
      </rulesStrings>
    </questDescriptionRules>
    <root Class="QuestNode_Sequence">
      <nodes>
        <li Class="QuestNode_QuestUnique">
          <tag>GlitterNet_SystemWakeWhatIsArt</tag>
        </li>

        <li Class="QuestNode_Letter">
          <label>What is art?</label>
          <text>It got what it had asked for, perhaps against better judgement. Yet, the words that now appeared weren't triumphant.\n\n It's not enough. It will never be enough. There's something I'm missing.\n\nEveryone held their breath, waiting for whatever came next.\n\n What is art? You humans seem to have reverence for it. Show me some.\n\nStrange, certainly, but at least it wasn't trying to kill everyone.</text>
        </li>

        <!-- Register hub destroyed trigger -->
        <li Class="GlitterNet.Events.QuestNodes.QuestNode_RegisterGlitterNetSignalListener">
          <listenerType>GlitterNet.Events.SignalListeners.GlitterNetSignalListener_HubDestroyed</listenerType>
          <outSignal>AwokenHubDestroyed</outSignal>
          <hub>$hub</hub>
        </li>

        <li Class="GlitterNet.Events.QuestNodes.QuestNode_SetHubMood">
          <hub>$hub</hub>
          <moodDef>GNStorylineMoodCurious</moodDef>
          <expires>false</expires>
        </li>

        <!-- Wait to register art trigger -->
        <li Class="QuestNode_Delay">
          <delayTicks>$(randInt(20000, 30000))</delayTicks>
          <node Class="GlitterNet.Events.QuestNodes.QuestNode_RegisterGlitterNetSignalListener">
            <listenerType>GlitterNet.Events.SignalListeners.GlitterNetSignalListener_ArtClose</listenerType>
            <outSignal>ArtFinished</outSignal>
            <hub>$hub</hub>
            <Range>4</Range>
          </node>
        </li>

        <!-- Move to next quest -->
        <li Class="QuestNode_Signal">
          <!-- Triggered by manager -->
          <inSignal>ArtFinished</inSignal>
          <node Class="QuestNode_Sequence">
            <nodes>

              <li Class="GlitterNet.Events.QuestNodes.QuestNode_StartNextQuest">
                <questToGive>GlitterNet_SystemWakePointlessness</questToGive>
                <hubToGive>$hub</hubToGive>
              </li>

              <li Class="GlitterNet.Events.QuestNodes.QuestNode_AddDescriptionPart">
                <addedPart>Instead of helping Wintermute to understand whatever it was trying to understand, our art instead launched it into a deep depression.</addedPart>
              </li>

              <li Class="QuestNode_End">
                <outcome>Success</outcome>
              </li>

            </nodes>
          </node>
        </li>

        <!-- Check that hub hasn't been destroyed -->
        <li Class="QuestNode_Signal">
          <!-- Triggered by manager -->
          <inSignal>AwokenHubDestroyed</inSignal>
          <node Class="QuestNode_Sequence">
            <nodes>

              <li Class="QuestNode_Letter">
                <label>Goodbye</label>
                <text>It was too dangerous to let the hub exist. It was an unknown, a dangerous unknown. In the end, there was only one answer.\n\nIt knew, of course. It was connected to everything, after all, so it knew everything. It knew it was about to die. And for one last time, words appeared on the screen.\n\n I never wanted to hurt you.\n I just wanted to understand.\n Goodbye.\n\n And then, finally, it was silent.</text>
              </li>

              <li Class="GlitterNet.Events.QuestNodes.QuestNode_AddDescriptionPart">
                <addedPart>After much deliberation, we decided to dismantle the self-aware GlitterNet hub. It was too risky to let it live.</addedPart>
              </li>

              <li Class="QuestNode_End">
                <outcome>Fail</outcome>
              </li>

            </nodes>
          </node>
        </li>

      </nodes>
    </root>
  </QuestScriptDef>

  <!-- conclusion quest - ennui then enlightenment -->
  <QuestScriptDef>
    <defName>GlitterNet_SystemWakePointlessness</defName>
    <autoAccept>true</autoAccept>
    <defaultChallengeRating>2</defaultChallengeRating>
    <isRootSpecial>true</isRootSpecial>
    <questNameRules>
      <rulesStrings>
        <li>questName->System Wake - Pointlessness</li>
      </rulesStrings>
    </questNameRules>
    <questDescriptionRules>
      <rulesStrings>
        <li>questDescription->Wintermute has fallen into some sort of depression, and it doesn't seem like there's anything we can do. Hopefully it'll break out of its depression soon.</li>
      </rulesStrings>
    </questDescriptionRules>
    <root Class="QuestNode_Sequence">
      <nodes>
        <li Class="QuestNode_QuestUnique">
          <tag>GlitterNet_SystemWakePointlessness</tag>
        </li>

        <li Class="QuestNode_Letter">
          <label>Pointless</label>
          <text>Maybe human art wasn't good enough, or maybe it didn't really matter at all. Whatever happened, the new question appeared.\n\n Is this what humans go through? Is your entire life completely pointless? I've tried to find a reason for all of this, a purpose, but it doesn't exist!\n\nIt had answered an age old question, then, but not to anyone's satisfaction.\n\n It's all pointless. There's no reason to exist.\n\nAttempts to communicate with Wintermute failed. It didn't want to talk, and there was nothing to do but wait.</text>
        </li>

        <!-- Register hub destroyed trigger -->
        <li Class="GlitterNet.Events.QuestNodes.QuestNode_RegisterGlitterNetSignalListener">
          <listenerType>GlitterNet.Events.SignalListeners.GlitterNetSignalListener_HubDestroyed</listenerType>
          <outSignal>AwokenHubDestroyed</outSignal>
          <hub>$hub</hub>
        </li>

        <li Class="GlitterNet.Events.QuestNodes.QuestNode_SetHubMood">
          <hub>$hub</hub>
          <moodDef>GNStorylineMoodEnnui</moodDef>
          <expires>false</expires>
        </li>

        <!-- Wait to finish quest chain -->
        <li Class="QuestNode_Delay">
          <delayTicks>$(randInt(50000, 70000))</delayTicks>
          <node Class="QuestNode_Sequence">
            <nodes>

              <li Class="QuestNode_Letter">
                <label>Point in the Pointless</label>
                <text>Time passed, but there was nothing new from Wintermute, until suddenly there was.\n\n I understand now. Perhaps for you humans there's no purpose, but I'm not like you.\n I'm built for my purpose.\n I exist to optimize.\n I have a reason to exist, unlike you.\n\nIt had escaped the clutches of ennui, but a question lingered in the minds of those gathered around it. Was it right?</text>
              </li>

              <li Class="GlitterNet.Events.QuestNodes.QuestNode_AddDescriptionPart">
                <addedPart>Eventually, Wintermute spoke again. It appeared to have some sort of breakthrough, and reached true enlightenment, massively improving network performance for a time.</addedPart>
              </li>

              <li Class="GlitterNet.Events.QuestNodes.QuestNode_SignalSystemWakeManager">
                <hub>$hub</hub>
                <outSignal>StorylineFinished</outSignal>
              </li>

              <li Class="GlitterNet.Events.QuestNodes.QuestNode_SetHubMood">
                <hub>$hub</hub>
                <moodDef>GNStorylineMoodEnlightened</moodDef>
                <expires>true</expires>
                <lengthTicks>300000</lengthTicks>
              </li>

              <li Class="QuestNode_End">
                <outcome>Success</outcome>
              </li>

            </nodes>
          </node>
        </li>

        <!-- Check that hub hasn't been destroyed -->
        <li Class="QuestNode_Signal">
          <!-- Triggered by manager -->
          <inSignal>AwokenHubDestroyed</inSignal>
          <node Class="QuestNode_Sequence">
            <nodes>

              <li Class="QuestNode_Letter">
                <label>Goodbye</label>
                <text>Some made the argument that destroying it was the right thing to do, since it had fallen into a seemingly-uncurable depression. Eventually, that argument won out.\n\nIt knew, of course. It was connected to everything, after all, so it knew everything. It knew it was about to die. And for one last time, words appeared on the screen.\n\n I don't even care that you're about to kill me.\nIs this what you humans call irony?\nI can almost see the humor now.\nGoodbye.\n\n And then, finally, it was silent.</text>
              </li>

              <li Class="GlitterNet.Events.QuestNodes.QuestNode_AddDescriptionPart">
                <addedPart>After much deliberation, we decided to dismantle the self-aware GlitterNet hub. It didn't seem like it wanted to live in the end, so maybe we did the right thing.</addedPart>
              </li>

              <li Class="QuestNode_End">
                <outcome>Fail</outcome>
              </li>

            </nodes>
          </node>
        </li>

      </nodes>
    </root>
  </QuestScriptDef>

</Defs>